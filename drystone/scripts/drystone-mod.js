!function(t,i,s){function n(i,s){this.element=i,this.options=t.extend({},u,s),this.init()}var u={item:".grid-item",gutter:10,xs:1,sm:2,md:2,lg:3,xl:3};n.prototype={init:function(){this.buildCache(),this.registerHandlers(),this.getValues(),this.build()},buildCache:function(){this.$grid=t(this.element),this.$gridItems=t(this.options.item)},getValues:function(){this.gridWidth=this.$grid.width(),this.numOfColumns=this.getNumOfColumns(),this.columnWidth=this.getColumnWidth()},getNumOfColumns:function(){this.columns=[];var t=0;t=void 0===this.newNum?3:this.newNum;for(var i=0;i<t;i++)this.columns.push([i,0]);return t},getColumnWidth:function(){return parseInt((this.gridWidth-this.options.gutter*(this.numOfColumns-1))/this.numOfColumns)},registerHandlers:function(){var t=this;s.rebuild=function(i){t.getValues(),t.newNum=i,t.build()}},build:function(){var i,s=this;s.$gridItems.each(function(){var n=t(this);n.css("position","absolute"),s.$grid.css("position","relative"),n.css("width",s.columnWidth);for(var u=0;u<s.columns.length;u++)(void 0==i||i[1]>s.columns[u][1])&&(i=s.columns[u]);0==i[0]?n.css("left",i[0]*s.columnWidth):n.css("left",i[0]*s.columnWidth+s.options.gutter*i[0]),n.css("top",i[1]),i[1]+=n.height()+s.options.gutter});for(var n=0;n<s.columns.length;n++)i[1]<s.columns[n][1]&&(i=s.columns[n]);s.$grid.css("height",i[1]-this.options.gutter)}},t.fn.drystone=function(i){return this.each(function(){t.data(this,"plugin_drystone")||t.data(this,"plugin_drystone",new n(this,i))})}}(jQuery,document,window);
//# sourceMappingURL=drystone-mod.js.map